{"version":3,"file":"Assign-ecd14c26.js","sources":["../../../../stores/assign-role.ts","../../../../components/AssignRole.vue"],"sourcesContent":["import { AssignRoleParams } from \"~/server/src/user\";\n\nexport interface AssignRoleError {\n  hasError: boolean;\n  message: string;\n  field: string;\n}\nexport interface AssignRoleState {\n  pending: boolean;\n  error: AssignRoleError;\n  responseOK: boolean;\n}\nexport const useAssignRoleStore = defineStore(\"assign-role-store\", {\n  state: (): AssignRoleState => ({\n    pending: false,\n    error: {\n      hasError: false,\n      message: \"\",\n      field: \"\",\n    },\n    responseOK: false,\n  }),\n\n  actions: {\n    async assignRole(body: AssignRoleParams, accessToken: string) {\n      try {\n        this.pending = true;\n        let error = {\n          hasError: false,\n          message: \"\",\n          field: \"\",\n        };\n        this.error = error;\n        let responseOK = false;\n        this.responseOK = responseOK;\n\n        const { data } = await useFetch(\"/api/users/assign-role\", {\n          method: \"put\",\n          body: { body, accessToken },\n\n          async onResponse({ request, response, options }) {\n            // Process the response data\n            if (response.ok) {\n              responseOK = true;\n            }\n          },\n\n          async onResponseError({ request, response, options }) {\n            if (response.status == 400) {\n              error = {\n                hasError: true,\n                message: \"role_id  or user_id is invalid\",\n                field: \"none\",\n              };\n            }\n            if (response.status == 401) {\n              error = {\n                hasError: true,\n                message: \"you are not authorised to perform that action\",\n                field: \"none\",\n              };\n            }\n            if (response.status === 404) {\n              error = {\n                hasError: true,\n                message: \"Role or user not found\",\n                field: \"name\",\n              };\n            }\n            if (response.status === 500) {\n              error = {\n                hasError: true,\n                message: \"Internal server error\",\n                field: \"none\",\n              };\n            }\n          },\n        });\n        this.pending = false;\n        this.error = error;\n        this.responseOK = responseOK;\n      } catch (err) {\n        this.pending = false;\n      }\n    },\n    unsetError() {\n      this.error = {\n        hasError: false,\n        message: \"\",\n        field: \"\",\n      };\n    },\n  },\n});\n","<script setup lang=\"ts\">\nimport { filterActiveRoles } from \"@/utils/roles\";\nimport { storeToRefs } from \"pinia\";\n\nimport { useAuthStore } from \"../stores/login\";\nimport { useRoleStore } from \"../stores/roles\";\nimport { useAssignRoleStore } from \"../stores/assign-role\";\nimport { AssignRoleParams } from \"~/server/src/user\";\n\nconst { setSelectedRole } = useRoleStore();\nconst { assignRole } = useAssignRoleStore();\nconst { user } = storeToRefs(useAuthStore());\nconst { selectedRole } = storeToRefs(useRoleStore());\n\nconst {\n  pending: assignRoleIsPending,\n  error: assignRoleIsErroring,\n  responseOK,\n} = storeToRefs(useAssignRoleStore());\n\nconst phone = ref(\"\");\nconst loading = ref(false);\nconst error = ref(null);\nconst searchedUser = ref();\n\nconst searchByPhone = async () => {\n  loading.value = true;\n\n  const { data, pending, error, refresh } = await useFetch(\n    \"/api/roles/get-role-by-phone\",\n    {\n      query: {\n        phone: phone.value,\n        accessToken: user.value.refresh_token,\n      },\n    }\n  );\n  loading.value = false;\n\n  searchedUser.value = data.value;\n};\n\nconst pageSize = ref(10);\nconst pageID = ref(1);\n\nconst {\n  data: roles,\n  pending,\n  error: fetchRoleIsErroring,\n  refresh,\n} = await useFetch(\"/api/roles/list\", {\n  query: {\n    accessToken: user.value.refresh_token,\n    pageID: pageID.value,\n    pageSize: pageSize.value,\n  },\n});\nrefresh();\n\nconst activeRoles = () => {\n  if (roles.value != null && roles.value) {\n    return filterActiveRoles(roles.value);\n  }\n  return [];\n};\n\nconst chosenRole = ref();\nconst selectRole = () => {\n  setSelectedRole(chosenRole.value);\n};\n\nconst assign = () => {\n  const body: AssignRoleParams = {\n    role_id: selectedRole.value.id,\n    user_id: searchedUser.value.id,\n  };\n  assignRole(body, user.value.refresh_token);\n};\n</script>\n\n<template>\n  <form @submit.prevent=\"searchByPhone\" class=\"mb-3 w-full\">\n    <label\n      for=\"default-search\"\n      class=\"mb-2 text-sm font-medium text-gray-900 sr-only\"\n      >Search</label\n    >\n    <div class=\"relative\">\n      <div\n        class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\"\n      >\n        <svg\n          aria-hidden=\"true\"\n          class=\"w-5 h-5 text-gray-500\"\n          fill=\"none\"\n          stroke=\"currentColor\"\n          viewBox=\"0 0 24 24\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            stroke-width=\"2\"\n            d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n          ></path>\n        </svg>\n      </div>\n      <input\n        type=\"search\"\n        id=\"default-search\"\n        v-model=\"phone\"\n        class=\"block w-full p-3 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:outline-teal-700 focus:ring-teal-500 focus:border-0\"\n        placeholder=\"Enter phone number and hit enter...\"\n        required\n      />\n      <button\n        type=\"submit\"\n        class=\"text-white absolute right-2.5 bottom-2.5 bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:outline-none focus:ring-teal-300 font-medium rounded-lg text-sm px-2 py-1\"\n      >\n        Search\n      </button>\n    </div>\n  </form>\n  <div v-if=\"searchedUser\">\n    <Spin v-if=\"loading\" class=\"text-teal-700\" />\n    <div v-else class=\"shadow-sm rounded-md w-full columns-2 bg-gray-200 p-4\">\n      <div>{{ searchedUser.full_names }}</div>\n      <div>{{ searchedUser.phone_number }}</div>\n    </div>\n    <form class=\"mb-3 w-full\">\n      <label\n        for=\"name\"\n        class=\"block text-sm font-semibold leading-6 text-gray-900\"\n        >Select Role to assign</label\n      ><select\n        v-model=\"chosenRole\"\n        @change=\"selectRole\"\n        class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n      >\n        <option v-for=\"role in activeRoles()\" :value=\"role\" :key=\"role.id\">\n          {{ role.name }}\n        </option>\n      </select>\n    </form>\n    <div class=\"h-[25rem] overflow-scroll\">\n      <ThePermissionsByRole v-if=\"selectedRole != null\" />\n    </div>\n    <div class=\"flex justify-end py-3\">\n      <button\n        @click=\"assign\"\n        type=\"submit\"\n        class=\"rounded-lg text-sm font-semibold py-2.5 px-4 text-sky-50 bg-teal-700 hover:text-sky-50/80 hover:bg-teal-600\"\n      >\n        <spin v-if=\"assignRoleIsPending\" />\n        <span v-else>Assign Role</span>\n      </button>\n    </div>\n  </div>\n</template>\n"],"names":["_withAsyncContext"],"mappings":"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"}