{"version":3,"file":"AddBulk-4c2e061f.js","sources":["../../../../stores/create-users-bulk.ts","../../../../components/AddUsersBulk.vue"],"sourcesContent":["import axios from \"axios\";\n\nexport interface Data {\n  total_failed: number;\n  total_inserted: number;\n  total_records: number;\n}\nexport interface Errors {\n  cell: string;\n  column: string;\n  description: string;\n  row: number;\n}\n\nexport interface Results {\n  errors: Errors[];\n  results: Data;\n}\n\nexport interface CreateUsersState {\n  pending: boolean;\n  error: string;\n  responseOK: boolean;\n  results: Results | null;\n}\nexport const useCreateUsersBulkStore = defineStore(\"create-users-bulk-store\", {\n  state: (): CreateUsersState => ({\n    pending: false,\n    error: \"\",\n    responseOK: false,\n    results: null,\n  }),\n\n  actions: {\n    async createUsersBulk(body, accessToken: string) {\n      try {\n        this.pending = true;\n        this.results = null;\n        const { data } = await axios({\n          method: \"post\",\n          // url: \"http://localhost:8080/users/bulk\",\n          url: \"https://dev.hazini.com/users/bulk\",\n          data: body,\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        });\n        this.pending = false;\n        this.results = data;\n      } catch (error) {\n        this.pending = false;\n        if (error.response.status === 400) {\n          this.error = \"The file provided is not a valid CSV file\";\n        }\n      }\n    },\n  },\n});\n","<script setup lang=\"ts\">\nimport { useCreateUsersBulkStore } from \"../stores/create-users-bulk\";\nimport { useAuthStore } from \"../stores/login\";\n\nconst companyID = ref();\n\nconst { createUsersBulk } = useCreateUsersBulkStore();\nconst { user } = storeToRefs(useAuthStore());\nconst { pending, error, results } = storeToRefs(useCreateUsersBulkStore());\n\nconst {\n  data: companies,\n  pending: fetchCompaniesIsPending,\n  error: fetchCompaniesHasError,\n  refresh: refreshCompanies,\n} = await useFetch(\"/api/company/list\", {\n  query: {\n    pageSize: 10,\n    pageID: 1,\n    accessToken: user.value.refresh_token,\n  },\n});\n\nconst users = ref(null);\nconst addusers = async () => {\n  const accessToken = user.value.refresh_token;\n  let formData = new FormData();\n  if (!users.value) return;\n  formData.append(\"file\", users.value.files[0]);\n  formData.append(\"company_id\", companyID.value);\n\n  await createUsersBulk(formData, accessToken);\n};\n\nconst title = ref(\"Add Users from CSV file\"); // change current title\n\nrefreshCompanies();\n</script>\n<template>\n  <div class=\"shadow-md p-5 bg-white\">\n    <div class=\" flex justify-start text-xl\">\n      Add Bulk Users\n    </div>\n    <br>\n    <form @submit.prevent=\"addusers\" class=\"w-full\">\n      <p class=\" text-sm font-semibold\">Download this <a href=\"#\" class=\" text-teal-800 underline hover:underline \">Csv\n          Form</a> ,fill the list with users and upload them.\n      </p><br>\n      <div class=\"mb-3\">\n        <label for=\"name\" class=\"block text-sm font-semibold leading-6 text-gray-900\">Select Company</label><select\n          v-model=\"companyID\"\n          class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n          <option v-for=\"company in companies\" :value=\"company.id\" :key=\"company.id\">\n            {{ company.name }}\n          </option>\n        </select>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"users-CSV\" class=\"block text-sm font-semibold leading-6 text-gray-900\">Users CSV *</label>\n        <input type=\"file\" ref=\"users\" id=\"users-CSV\"\n          class=\"appearance-none text-slate-900 bg-gray-50 rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-sky-500 ring-1 ring-slate-200\"\n          required />\n      </div>\n\n      <div v-if=\"results\" class=\"text-sm space-y-3 mb-3\">\n        <div class=\"border border-teal-300 bg-teal-100 p-4\">\n          <p class=\"text-green-500\">\n            Records saved:{{ results.results.total_inserted }}\n          </p>\n          <p class=\"text-red-500\">\n            Records failed:{{ results.results.total_failed }}\n          </p>\n          <p class=\"text-gray-700\">\n            Total Records :{{ results.results.total_records }}\n          </p>\n        </div>\n        <div class=\"border border-red-300 bg-red-50 p-4 space-y-3\" v-if=\"results.errors.length\">\n          <div v-for=\"error in results.errors\" class=\"text-red-400\" :key=\"error.row\">\n            <p class=\"flex space-x-4\">\n              <span>Row Number: {{ error.row }}</span>\n              <!--<span>Cell: {{ error.cell }}</span>-->\n              <span> Column Name: {{ error.column }} </span>\n            </p>\n            Description:{{ error.description }}\n          </div>\n        </div>\n      </div>\n\n      <p class=\"text-sm text-red-500\">{{ error }}</p>\n      <button type=\"submit\"\n        class=\"inline-flex rounded-lg text-sm font-semibold py-2.5 px-4 text-sky-50 bg-cyan-600 hover:text-sky-50/80 hover:bg-cyan-400\">\n        <Spin v-if=\"pending\" />\n        <span v-else>Add Users</span>\n      </button>\n    </form>\n  </div>\n</template>\n"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAyBO,MAAA,0BAAA,YAAA,2BAAA;AAAA,EAAuE,OAAA,OAAA;AAAA,IAC5C,SAAA;AAAA,IACrB,OAAA;AAAA,IACF,YAAA;AAAA,IACK,SAAA;AAAA,EACH;AAAA,EACX,SAAA;AAAA,IAES,MAAA,gBAAA,MAAA,aAAA;AAEL,UAAA;AACE,aAAA,UAAA;AACA,aAAA,UAAA;AACA,cAAA,EAAA,SAAA,MAAA,MAAA;AAAA,UAA6B,QAAA;AAAA;AAAA,UACnB,KAAA;AAAA,UAEH,MAAA;AAAA,UACC,SAAA;AAAA,YACG,eAAA,UAAA;AAAA,UACkB;AAAA,QAC3B,CAAA;AAEF,aAAA,UAAA;AACA,aAAA,UAAA;AAAA,MAAe,SAAA,OAAA;AAEf,aAAA,UAAA;AACA,YAAA,MAAA,SAAA,WAAA,KAAA;AACE,eAAA,QAAA;AAAA,QAAa;AAAA,MACf;AAAA,IACF;AAAA,EACF;AAEJ,CAAA;;;;;;ACrDA,QAAA;AAEA,4BAAA;AACA,UAAA,EAAA,KAAA,IAAA,YAAA,aAAA,CAAA;AACA,UAAA,EAAA,SAAA,OAAA,QAAA,IAAA,YAAA,wBAAA,CAAA;AAEA,UAAA;AAAA,MAAM,MAAA;AAAA,MACE,SAAA;AAAA,MACG,OAAA;AAAA,MACF,SAAA;AAAA,IACE,KAAA,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,SAAA,qBAAA;AAAA,MAC6B,OAAA;AAAA,QAC/B,UAAA;AAAA,QACK,QAAA;AAAA,QACF,aAAA,KAAA,MAAA;AAAA,MACgB;AAAA,IAC1B,GAAA,aAAA,CAAA,GAAA,SAAA,MAAA,QAAA,UAAA,GAAA;AAGF,QAAA,IAAA;AAWA,QAAA,yBAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}