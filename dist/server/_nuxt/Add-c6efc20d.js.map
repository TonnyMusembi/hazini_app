{"version":3,"file":"Add-c6efc20d.js","sources":["../../../../stores/create-branch.ts","../../../../components/AddBranch.vue"],"sourcesContent":["import { CreateBranchParams } from \"~/server/src/branch\";\n\nexport interface CreateBranchState {\n  pending: boolean;\n  responseOK: boolean;\n  nonFieldErrors: string;\n  fieldErrors: Array<{ field: string; description: string }> | null;\n}\nexport const useCreateBranchStore = defineStore(\"create-branch-store\", {\n  state: (): CreateBranchState => ({\n    pending: false,\n    responseOK: false,\n    nonFieldErrors: \"\",\n    fieldErrors: null,\n  }),\n\n  actions: {\n    async createBranch(body: CreateBranchParams, accessToken: string) {\n      try {\n        this.pending = true;\n        let nonFieldErrors = \"\";\n        let fieldErrors = null;\n        let responseOK = false;\n        this.responseOK = responseOK;\n\n        const { data } = await useFetch(\"/api/branch/create\", {\n          method: \"post\",\n          body: { body, accessToken },\n\n          async onResponse({ request, response, options }) {\n            // Process the response data\n            if (response.ok) {\n              responseOK = true;\n            }\n          },\n\n          async onResponseError({ request, response, options }) {\n            if (response.status == 400) {\n              fieldErrors = response._data?.data.errors;\n            }\n            if (response.status == 401) {\n              nonFieldErrors = \"Unauthorised\";\n            }\n            if (response.status === 403) {\n              nonFieldErrors = response._data?.data.error;\n            }\n            if (response.status === 500) {\n              nonFieldErrors = \"Internal Error\";\n            }\n          },\n        });\n        this.pending = false;\n        this.fieldErrors = fieldErrors;\n        this.nonFieldErrors = nonFieldErrors;\n        this.responseOK = responseOK;\n      } catch (err) {\n        this.pending = false;\n      }\n    },\n  },\n});\n","<script setup lang=\"ts\">\nimport { CreateBranchParams } from \"~/server/src/branch\";\nimport { useCreateBranchStore } from \"../stores/create-branch\";\nimport { useAuthStore } from \"../stores/login\";\nimport { storeToRefs } from \"pinia\";\nimport { getErrorByField, fieldHasError } from \"~/utils/errors\";\n\nconst { createBranch } = useCreateBranchStore();\nconst {\n  pending: addBranchIsPending,\n  responseOK,\n  nonFieldErrors,\n  fieldErrors,\n} = storeToRefs(useCreateBranchStore());\nconst { user } = storeToRefs(useAuthStore());\n\nconst {\n  data: companies,\n  pending,\n  error,\n  refresh,\n} = await useFetch(\"/api/company/list\", {\n  query: {\n    pageSize: 10,\n    pageID: 1,\n    accessToken: user.value.refresh_token,\n  },\n});\n\nconst name = ref(\"\");\nconst physicalAddress = ref(\"\");\nconst numberOfEmployees = ref(0);\nconst status = ref(1);\nconst companyID = ref(0);\n\nconst createNewBranch = async () => {\n  const accessToken = user.value.refresh_token;\n  const branch: CreateBranchParams = {\n    name: name.value,\n    physical_address: physicalAddress.value,\n    number_of_employees: numberOfEmployees.value,\n    status: status.value,\n    company_id: companyID.value,\n  };\n  await createBranch(branch, accessToken);\n  if (responseOK.value) {\n    navigateTo(\"/branches\");\n  }\n};\n\nconst title = ref(\"Add Company\"); // change current title\n</script>\n<template>\n  <div class=\" flex items-start text-xl\">\n    Add Branch\n  </div>\n  <br>\n  <div class=\"shadow-md p-5 bg-white\">\n    <form @submit.prevent=\"createNewBranch\" class=\"w-full\">\n      <div class=\"mb-3\">\n        <label for=\"company\" class=\"block text-sm font-semibold leading-6 text-gray-900\">Select Company</label><select\n          v-model=\"companyID\" id=\"company\" :class=\"{\n            'ring-1 ring-red-500 bg-red-50': fieldHasError(\n              fieldErrors,\n              'CompanyID'\n            ),\n          }\"\n          class=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\">\n          <option v-for=\"company in companies\" :value=\"company.id\" :key=\"company.id\">\n            {{ company.name }}\n          </option>\n        </select>\n        <p class=\"text-red-500 mb-6 text-sm\">\n          {{ getErrorByField(fieldErrors, \"CompanyID\") }}\n        </p>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"name\" class=\"block text-sm font-semibold leading-6 text-gray-900\">Name</label><input type=\"text\"\n          id=\"name\" v-model=\"name\" :class=\"{\n            'ring-1 ring-red-500 bg-red-50': fieldHasError(fieldErrors, 'Name'),\n          }\"\n          class=\"appearance-none text-slate-900 bg-gray-50 rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-sky-500 ring-1 ring-slate-200\"\n          required />\n        <p class=\"text-red-500 mb-6 text-sm\">\n          {{ getErrorByField(fieldErrors, \"Name\") }}\n        </p>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"physical-address\" class=\"block text-sm font-semibold leading-6 text-gray-900\">Physical\n          Address</label><input type=\"text\" id=\"physical-address\" :class=\"{\n            'ring-1 ring-red-500 bg-red-50': fieldHasError(\n              fieldErrors,\n              'PhysicalAddress'\n            ),\n          }\"\n          class=\"appearance-none text-slate-900 bg-gray-50 rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-sky-500 focus:bg-white ring-1 ring-slate-200\"\n          aria-required v-model=\"physicalAddress\" />\n        <p class=\"text-red-500 mb-6 text-sm\">\n          {{ getErrorByField(fieldErrors, \"PhysicalAddress\") }}\n        </p>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"number-of-mployees\" class=\"block text-sm font-semibold leading-6 text-gray-900\">Number of\n          Employees</label><input type=\"number\" id=\"number-of-employees\" :class=\"{\n            'ring-1 ring-red-500 bg-red-50': fieldHasError(\n              fieldErrors,\n              'NumberOfEmployees'\n            ),\n          }\"\n          class=\"appearance-none text-slate-900 bg-gray-50 rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-sky-500 focus:bg-white ring-1 ring-slate-200\"\n          aria-required v-model=\"numberOfEmployees\" />\n        <p class=\"text-red-500 mb-6 text-sm\">\n          {{ getErrorByField(fieldErrors, \"NumberOfEmployees\") }}\n        </p>\n      </div>\n\n      <p class=\"text-red-500 mb-6\">\n        {{ nonFieldErrors }}\n      </p>\n      <button type=\"submit\"\n        class=\"inline-flex rounded-lg text-sm font-semibold py-2.5 px-4 text-sky-50 bg-teal-700 hover:text-sky-50/80 hover:bg-teal-600\">\n        <spin v-if=\"addBranchIsPending\" />\n        <span v-else>Add Branch</span>\n      </button>\n    </form>\n  </div>\n</template>\n"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAQO,MAAA,uBAAA,YAAA,uBAAA;AAAA,EAAgE,OAAA,OAAA;AAAA,IACpC,SAAA;AAAA,IACtB,YAAA;AAAA,IACG,gBAAA;AAAA,IACI,aAAA;AAAA,EACH;AAAA,EACf,SAAA;AAAA,IAES,MAAA,aAAA,MAAA,aAAA;AAEL,UAAA;AACE,aAAA,UAAA;AACA,YAAA,iBAAA;AACA,YAAA,cAAA;AACA,YAAA,aAAA;AACA,aAAA,aAAA;AAEA,cAAA,EAAA,KAAA,IAAA,MAAA,SAAA,sBAAA;AAAA,UAAsD,QAAA;AAAA,UAC5C,MAAA,EAAA,MAAA,YAAA;AAAA,UACkB,MAAA,WAAA,EAAA,SAAA,UAAA,QAAA,GAAA;AAIxB,gBAAA,SAAA,IAAA;AACE,2BAAA;AAAA,YAAa;AAAA,UACf;AAAA,UACF,MAAA,gBAAA,EAAA,SAAA,UAAA,QAAA,GAAA;;AAGE,gBAAA,SAAA,UAAA,KAAA;AACE,6BAAA,cAAA,UAAA,mBAAA,KAAA;AAAA,YAAmC;AAErC,gBAAA,SAAA,UAAA,KAAA;AACE,+BAAA;AAAA,YAAiB;AAEnB,gBAAA,SAAA,WAAA,KAAA;AACE,gCAAA,cAAA,UAAA,mBAAA,KAAA;AAAA,YAAsC;AAExC,gBAAA,SAAA,WAAA,KAAA;AACE,+BAAA;AAAA,YAAiB;AAAA,UACnB;AAAA,QACF,GAAA,aAAA;AAEF,aAAA,UAAA;AACA,aAAA,cAAA;AACA,aAAA,iBAAA;AACA,aAAA,aAAA;AAAA,MAAkB,SAAA,KAAA;AAElB,aAAA,UAAA;AAAA,MAAe;AAAA,IACjB;AAAA,EACF;AAEJ,CAAA;;;;;;ACrDA,yBAAA;AACA,UAAA;AAAA,MAAM,SAAA;AAAA,MACK;AAAA,MACT;AAAA,MACA;AAAA,IACA,IAAA,YAAA,qBAAA,CAAA;AAEF,UAAA,EAAA,KAAA,IAAA,YAAA,aAAA,CAAA;AAEA,UAAA;AAAA,MAAM,MAAA;AAAA,MACE;AAAA,MACN;AAAA,MACA;AAAA,IACA,KAAA,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,SAAA,qBAAA;AAAA,MACsC,OAAA;AAAA,QAC/B,UAAA;AAAA,QACK,QAAA;AAAA,QACF,aAAA,KAAA,MAAA;AAAA,MACgB;AAAA,IAC1B,GAAA,aAAA,CAAA,GAAA,SAAA,MAAA,QAAA,UAAA,GAAA;AAGF,UAAA,OAAA,IAAA,EAAA;AACA,UAAA,kBAAA,IAAA,EAAA;AACA,UAAA,oBAAA,IAAA,CAAA;AACA,QAAA,CAAA;AACA,QAAA,CAAA;AAiBA,QAAA,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}