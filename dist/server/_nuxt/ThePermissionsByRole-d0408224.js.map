{"version":3,"file":"ThePermissionsByRole-d0408224.js","sources":["../../../../utils/roles.ts","../../../../components/EditPermissionDialog.vue","../../../../components/ThePermissionsByRole.vue"],"sourcesContent":["import { Role } from \"~~/server/src/role\";\n\nexport function filterActiveRoles(roles) {\n  if (roles != null && roles) {\n    return roles.filter((role: Role) => role.status > 0);\n  }\n  return [];\n}\nexport function filterInactiveRoles(roles) {\n  if (roles != null) {\n    return roles.filter((role: Role) => role.status === 0);\n  }\n  return [];\n}\n","<script setup lang=\"ts\">\nimport { TransitionRoot } from \"@headlessui/vue\";\nimport { TabGroup, TabList, Tab, TabPanels, TabPanel } from \"@headlessui/vue\";\nimport { useRoleStore } from \"../stores/roles\";\nimport { useAuthStore } from \"../stores/login\";\nimport { useUpdateRoleStore } from \"../stores/update-role\";\nimport { usePermissionStore } from \"../stores/permissions\";\nimport { UpdateRoleParams } from \"~~/server/src/role\";\nimport { useDialogStore } from \"../stores/dialogs\";\nimport { storeToRefs } from \"pinia\";\n\nconst { updateRole } = useUpdateRoleStore();\nconst { closeEditPermissionDialog } = useDialogStore();\n\nconst { user } = storeToRefs(useAuthStore());\nconst { selectedRole, refreshRolesFunction, editIsToActivateRole } =\n  storeToRefs(useRoleStore());\nconst { showEditPermissionDialog } = storeToRefs(useDialogStore());\n\nconst {\n  pending: updateRoleIsPending,\n  error: updateIsErroring,\n  responseOK,\n} = storeToRefs(useUpdateRoleStore());\n\nconst confirmEditMessage = ref(`sudo edit role`);\nconst confirmEdit = ref(\"\");\nconst showInputError = ref(false);\n\nconst disableOrEnableRole = async () => {\n  if (confirmEdit.value != confirmEditMessage.value) {\n    showInputError.value = true;\n    return;\n  }\n\n  const accessToken = user.value.refresh_token;\n  const name = selectedRole.value.name;\n  const permission = \"\" + selectedRole.value.permission;\n  const roleID = selectedRole.value.id;\n  const editIsToActivate = editIsToActivateRole.value ? 1 : 0;\n  const body: UpdateRoleParams = { name, permission, status: editIsToActivate };\n  await updateRole(body, accessToken, roleID);\n  refreshRolesFunction.value();\n  closeEditPermissionDialog();\n};\n</script>\n<template>\n  <TransitionRoot as=\"template\" :show=\"showEditPermissionDialog\">\n    <DialogComponent :closeFunc=\"closeEditPermissionDialog\">\n      <DialogHead>Edit Permissions</DialogHead>\n      <DialogTitle> </DialogTitle>\n\n      <div class=\"w-full p-4 space-y-3\">\n        <div class=\"text-gray-600 space-y-2\">\n          <p>\n            Editing permissions is <span class=\"text-red-500\">sensitive!</span>\n          </p>\n          <p>\n            We encourage you to be <span class=\"font-bold\">careful</span> while\n            doing it.\n          </p>\n          <p>\n            Type\n            <span class=\"text-red-500\">{{ confirmEditMessage }}</span>\n            in the text box below and click the edit button.\n          </p>\n        </div>\n        <form class=\"\" @submit.prevent=\"disableOrEnableRole\">\n          <div class=\"w-full\">\n            <input\n              id=\"confirmEdit\"\n              name=\"confirmEdit\"\n              type=\"text\"\n              required\n              v-model=\"confirmEdit\"\n              @input=\"showInputError = false\"\n              class=\"w-full bg-gray-100 bg-opacity-50 rounded border border-gray-300 focus:border-teal-500 focus:bg-transparent focus:ring-2 focus:ring-teal-200 text-base outline-none text-gray-700 py-1 px-3 transition-colors duration-200 ease-in-out\"\n              :class=\"{\n                'border-red-300 bg-red-200 ring-red-200': showInputError,\n              }\"\n            />\n          </div>\n          <div v-if=\"showInputError\" class=\"text-sm text-red-400 w-full\">\n            incorrect!\n          </div>\n          <div class=\"flex justify-end w-full space-x-3 text-sm font-semibold\">\n            <div\n              @click=\"closeEditPermissionDialog\"\n              class=\"flex cursor-pointer justify-center px-4 bg-teal-400 mt-4 py-2 text-slate-50 uppercase tracking-wider rounded-md\"\n            >\n              <span>Cancel</span>\n            </div>\n            <button\n              type=\"submit\"\n              class=\"flex cursor-pointer justify-center px-4 mt-4 bg-red-700 py-2 text-slate-50 uppercase tracking-wider rounded-md\"\n            >\n              <Spin v-if=\"updateRoleIsPending\" class=\"text-slate-50\" />\n              <span v-else>Edit</span>\n            </button>\n          </div>\n        </form>\n      </div>\n      <DialogFooter>\n        <p class=\"text-sm text-gray-600\"></p>\n      </DialogFooter>\n    </DialogComponent>\n  </TransitionRoot>\n</template>\n","<script setup lang=\"ts\">\nimport { roleHasPermission } from \"~/utils/permissions\";\nimport { TogglePermission } from \"~/server/src/permission\";\nimport { useAuthStore } from \"../stores/login\";\nimport { useRoleStore } from \"../stores/roles\";\nimport { usePermissionStore } from \"../stores/permissions\";\nimport { useDialogStore } from \"../stores/dialogs\";\nimport { storeToRefs } from \"pinia\";\n\nconst { openEditPermissionDialog } = useDialogStore();\nconst { user } = storeToRefs(useAuthStore());\nconst { selectedRole } = storeToRefs(useRoleStore());\nconst { togglePermissionsArray, selectedPermission } = storeToRefs(\n  usePermissionStore()\n);\nconst { setTogglePermissionPayload } = usePermissionStore();\n\nconst pageSize = ref(10);\nconst pageID = ref(1);\nconst {\n  data: resources,\n  pending,\n  error,\n  refresh,\n} = await useFetch(\"/api/resources/list\", {\n  query: {\n    accessToken: user.value.refresh_token,\n  },\n});\nrefresh();\n\nconst hasPermission = (permission: number): boolean => {\n  if (selectedRole.value != null) {\n    return roleHasPermission(selectedRole.value, permission);\n  }\n  return false;\n};\n</script>\n\n<template>\n  <div class=\"shadow-md relative pb-5\">\n    <div class=\"relative h-full overflow-auto\">\n      <div\n        class=\"flex justify-between w-full text-sm font-bold text-left text-gray-500 px-6 py-3 tracking-wide\"\n      >\n        <div class=\"\">Action</div>\n        <div class=\"\">Allowed</div>\n      </div>\n      <div\n        v-for=\"(resourceGroup, index1) in resources\"\n        :key=\"resourceGroup.resource_group_id\"\n        class=\"w-full text-sm text-left text-gray-500 cursor-pointer\"\n      >\n        <div class=\"px-6 text-xs py-3 text-gray-900 font-semibold\">\n          {{ resourceGroup.resource_group_name }}\n        </div>\n        <div class=\"bg-white py-3\">\n          <div\n            v-for=\"(resource, index2) in resourceGroup.resources\"\n            :key=\"`${index1}${index2}`\"\n            class=\"flex justify-between w-full hover:bg-teal-100\"\n          >\n            <div class=\"px-6 font-medium whitespace-nowrap\">\n              {{ resource.resource_name }}\n            </div>\n            <div class=\"px-6\">\n              <label class=\"relative inline-flex items-center cursor-pointer\">\n                <input\n                  type=\"checkbox\"\n                  class=\"sr-only peer\"\n                  disabled\n                  :checked=\"hasPermission(resource.permission)\"\n                />\n                <div\n                  class=\"w-9 h-4 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-teal-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-teal-600\"\n                ></div>\n                <span\n                  v-if=\"hasPermission(resource.permission)\"\n                  class=\"ml-3 text-sm font-medium text-gray-900\"\n                  >Yes</span\n                >\n                <span v-else class=\"ml-3 text-sm font-medium text-gray-900\"\n                  >No</span\n                >\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <AddResourcesDialog :refreshPermission=\"refresh\" />\n    <EditPermissionDialog />\n  </div>\n</template>\n"],"names":["_withAsyncContext"],"mappings":";;;;;;;;;;;AAEO,SAAS,kBAAkB,OAAO;AACnC,MAAA,SAAS,QAAQ,OAAO;AAC1B,WAAO,MAAM,OAAO,CAAC,SAAe,KAAK,SAAS,CAAC;AAAA,EACrD;AACA,SAAO;AACT;AACO,SAAS,oBAAoB,OAAO;AACzC,MAAI,SAAS,MAAM;AACjB,WAAO,MAAM,OAAO,CAAC,SAAe,KAAK,WAAW,CAAC;AAAA,EACvD;AACA,SAAO;AACT;;;;;ACFA,UAAA,EAAA,eAAA;AACA,UAAA,EAAA,8BAAA;AAEA,UAAA,EAAA,KAAA,IAAA,YAAA,aAAA,CAAA;AACA,UAAA,EAAA,cAAA,sBAAA,qBAAA,IAAA,YAAA,aAAA,CAAA;AAEA,UAAA,EAAA,yBAAA,IAAA,YAAA,eAAA,CAAA;AAEA,UAAA;AAAA,MAAM,SAAA;AAAA,MACK,OAAA;AAAA,MACF;AAAA,IACP,IAAA,YAAA,mBAAA,CAAA;AAGF,UAAA,qBAAA,IAAA,gBAAA;AACA,UAAA,cAAA,IAAA,EAAA;AACA,UAAA,iBAAA,IAAA,KAAA;AAEA,UAAA,sBAAA,YAAA;AACE,UAAA,YAAA,SAAA,mBAAA,OAAA;AACE,uBAAA,QAAA;AACA;AAAA,MAAA;AAGF,YAAA,cAAA,KAAA,MAAA;AACA,YAAA,OAAA,aAAA,MAAA;AACA,YAAA,aAAA,KAAA,aAAA,MAAA;AACA,YAAA,SAAA,aAAA,MAAA;AACA,YAAA,mBAAA,qBAAA,QAAA,IAAA;AACA,YAAA,OAAA,EAAA,MAAA,YAAA,QAAA,iBAAA;AACA,YAAA,WAAA,MAAA,aAAA,MAAA;AACA,2BAAA,MAAA;AACA;IAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClC5B,mBAAA;AACA,UAAA,EAAA,KAAA,IAAA,YAAA,aAAA,CAAA;AACA,UAAA,EAAA,aAAA,IAAA,YAAA,aAAA,CAAA;AACA;AAAA,MAAuD,mBAAA;AAAA,IAClC;AAErB,uBAAA;AAEA,QAAA,EAAA;AACA,QAAA,CAAA;AACA,UAAA;AAAA,MAAM,MAAA;AAAA,MACE;AAAA,MACN;AAAA,MACA;AAAA,IACA,KAAA,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,SAAA,uBAAA;AAAA,MACwC,OAAA;AAAA,QACjC,aAAA,KAAA,MAAA;AAAA,MACmB;AAAA,IAC1B,GAAA,aAAA,CAAA,GAAA,SAAA,MAAA,QAAA,UAAA,GAAA;AAEF;AAEA,UAAA,gBAAA,CAAA,eAAA;AACE,UAAA,aAAA,SAAA,MAAA;AACE,eAAA,kBAAA,aAAA,OAAA,UAAA;AAAA,MAAuD;AAEzD,aAAA;AAAA,IAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}