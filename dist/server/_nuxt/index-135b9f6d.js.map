{"version":3,"file":"index-135b9f6d.js","sources":["../../../../stores/company.ts","../../../../stores/update-company.ts","../../../../components/UpdateCompany.vue","../../../../components/UpdateCompanyDialog.vue","../../../../stores/disable-company.ts","../../../../components/DisableCompany.vue","../../../../components/DisableCompanyDialog.vue","../../../../components/TheCompanies.vue","../../../../pages/companies/index.vue"],"sourcesContent":["import { Company } from \"~~/server/src/company\";\n\nexport interface CompanyState {\n  selectedCompany: Company | null;\n}\n\nexport const useCompanyStore = defineStore(\"companies-store\", {\n  state: (): CompanyState => ({\n    selectedCompany: null,\n  }),\n\n  actions: {\n    setSelectedCompany(payload: Company) {\n      console.log(payload);\n      this.selectedCompany = payload;\n    },\n  },\n});\n","import { Company } from \"~/server/src/company\";\n\nexport interface UpdateCompanyState {\n  pending: boolean;\n  responseOK: boolean;\n  nonFieldErrors: string;\n  fieldErrors: Array<{ field: string; description: string }> | null;\n  actionIsToDisable: boolean;\n}\nexport const useUpdateCompanyStore = defineStore(\"update-company-store\", {\n  state: (): UpdateCompanyState => ({\n    pending: false,\n    responseOK: false,\n    nonFieldErrors: \"\",\n    fieldErrors: null,\n    actionIsToDisable: false,\n  }),\n\n  actions: {\n    async updateCompany(body: Company, accessToken: string, companyID:number) {\n       console.log(companyID);\n      try {\n        this.pending = true;\n        let nonFieldErrors = \"\";\n        let fieldErrors = null;\n        let responseOK = false;\n        this.responseOK = responseOK;\n\n        const { data } = await useFetch(\"/api/company/update\", {\n          method: \"put\",\n          body: { body, accessToken },\n\n          async onResponse({ request, response, options }) {\n            // Process the response data\n            if (response.ok) {\n              responseOK = true;\n            }\n          },\n\n          async onResponseError({ request, response, options }) {\n            if (response.status == 400) {\n              fieldErrors = response._data?.data.errors;\n            }\n            if (response.status == 401) {\n              nonFieldErrors = \"Unauthorised\";\n            }\n            if (response.status === 403) {\n              nonFieldErrors = response._data?.data.error;\n            }\n            if (response.status === 404) {\n              nonFieldErrors = response._data?.data.error;\n            }\n            if (response.status === 500) {\n              nonFieldErrors = \"Internal Error\";\n            }\n          },\n        });\n        this.pending = false;\n        this.fieldErrors = fieldErrors;\n        this.nonFieldErrors = nonFieldErrors;\n        this.responseOK = responseOK;\n      } catch (err) {\n        this.pending = false;\n      }\n    },\n    setDisableAction(payload: boolean) {\n      this.actionIsToDisable = payload;\n    },\n  },\n});\n","<script setup lang=\"ts\">\nimport { Company } from \"~/server/src/company\";\nimport { useAuthStore } from \"../stores/login\";\nimport { getErrorByField, fieldHasError } from \"~/utils/errors\";\nimport { useCompanyStore } from \"../stores/company\";\nimport { useUpdateCompanyStore } from \"../stores/update-company\";\nimport { useDialogStore } from \"~/stores/dialogs\";\n\nconst { updateCompany } = useUpdateCompanyStore();\nconst { closeUpdateCompanyDialog } = useDialogStore();\n\nconst { pending, nonFieldErrors, fieldErrors, responseOK } = storeToRefs(\n  useUpdateCompanyStore()\n);\nconst { user } = storeToRefs(useAuthStore());\nconst { selectedCompany } = storeToRefs(useCompanyStore());\n\nconst company: Company = ref(selectedCompany.value);\n\nconst createNewCompany = async () => {\n  const accessToken = user.value.refresh_token;\n  console.log(company.value);\n  //   let payload: Company = {\n  //     name: company.value.name,\n  //     physical_address: company.value.physical_address,\n  //     max_loan_percent: company.value.max_loan_percent,\n  //     number_of_employees: company.value.number_of_employees,\n  //     loan_period: company.value.loan_period,\n  //     approves_loan: company.value.approves_loan,\n  //     status: company.value.status,\n  //     profit_share_percent: company.value.profit_share_percent,\n  //   };\n  await updateCompany(company.value, accessToken);\n  if (responseOK.value) {\n    closeUpdateCompanyDialog();\n  }\n};\n\nconst title = ref(\"Add Company\"); // change current title\n</script>\n<template>\n  <p class=\"text-red-500 mb-6\">\n    {{ nonFieldErrors }}\n  </p>\n  <form @submit.prevent=\"createNewCompany\" class=\"w-full\">\n    <div class=\"mb-3\">\n      <label\n        for=\"name\"\n        class=\"block text-sm font-semibold leading-6 text-gray-900\"\n        >Name</label\n      ><input\n        type=\"text\"\n        id=\"name\"\n        v-model=\"company.name\"\n        :class=\"{\n          'ring-1 ring-red-500 bg-red-50': fieldHasError(fieldErrors, 'Name'),\n        }\"\n        class=\"appearance-none text-slate-900 bg-gray-50 rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-sky-500 ring-1 ring-slate-200\"\n        required\n      />\n      <p class=\"text-red-500 mb-6 text-sm\">\n        {{ getErrorByField(fieldErrors, \"Name\") }}\n      </p>\n    </div>\n    <div class=\"mb-3\">\n      <label\n        for=\"physical-address\"\n        class=\"block text-sm font-semibold leading-6 text-gray-900\"\n        >Physical Address</label\n      ><input\n        type=\"text\"\n        id=\"physical-address\"\n        :class=\"{\n          'ring-1 ring-red-500 bg-red-50': fieldHasError(\n            fieldErrors,\n            'PhysicalAddress'\n          ),\n        }\"\n        class=\"appearance-none text-slate-900 bg-gray-50 rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-sky-500 focus:bg-white ring-1 ring-slate-200\"\n        aria-required\n        v-model=\"company.physical_address\"\n      />\n      <p class=\"text-red-500 mb-6 text-sm\">\n        {{ getErrorByField(fieldErrors, \"PhysicalAddress\") }}\n      </p>\n    </div>\n    <div class=\"mb-3\">\n      <label\n        for=\"number-of-mployees\"\n        class=\"block text-sm font-semibold leading-6 text-gray-900\"\n        >Number of Employees</label\n      ><input\n        type=\"number\"\n        id=\"number-of-employees\"\n        disabled\n        :class=\"{\n          'ring-1 ring-red-500 bg-red-50': fieldHasError(\n            fieldErrors,\n            'NumberOfEmployees'\n          ),\n        }\"\n        class=\"appearance-none cursor-not-allowed text-slate-900 bg-gray-50 rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-sky-500 focus:bg-white ring-1 ring-slate-200\"\n        aria-required\n        min=\"1\"\n        v-model=\"company.number_of_employees\"\n      />\n      <p class=\"text-red-500 mb-6 text-sm\">\n        {{ getErrorByField(fieldErrors, \"NumberOfEmployees\") }}\n      </p>\n    </div>\n    <div class=\"mb-3\">\n      <label\n        for=\"max-loan-percent\"\n        class=\"block text-sm font-semibold leading-6 text-gray-900\"\n        >Max percent of loan amount that can be taken as loan</label\n      ><input\n        type=\"number\"\n        id=\"max-loan-percent\"\n        step=\"0.01\"\n        min=\"0\"\n        :class=\"{\n          'ring-1 ring-red-500 bg-red-50': fieldHasError(\n            fieldErrors,\n            'MaxLoanPercent'\n          ),\n        }\"\n        class=\"appearance-none text-slate-900 bg-gray-50 rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-sky-500 ring-1 ring-slate-200\"\n        required\n        v-model=\"company.max_loan_percent\"\n      />\n      <p class=\"text-red-500 mb-6 text-sm\">\n        {{ getErrorByField(fieldErrors, \"MaxLoanPercent\") }}\n      </p>\n    </div>\n\n    <div class=\"mb-3\">\n      <label\n        for=\"profit-share-percent\"\n        class=\"block text-sm font-semibold leading-6 text-gray-900\"\n        >Percentage of interest retained by this company</label\n      ><input\n        type=\"number\"\n        id=\"profit-share-percent\"\n        step=\"0.01\"\n        min=\"0\"\n        :class=\"{\n          'ring-1 ring-red-500 bg-red-50': fieldHasError(\n            fieldErrors,\n            'ProfitSharePercent'\n          ),\n        }\"\n        class=\"appearance-none text-slate-900 bg-gray-50 rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-sky-500 focus:bg-white ring-1 ring-slate-200\"\n        aria-required\n        v-model=\"company.profit_share_percent\"\n      />\n      <p class=\"text-red-500 mb-6 text-sm\">\n        {{ getErrorByField(fieldErrors, \"ProfitSharePercent\") }}\n      </p>\n    </div>\n    <div class=\"mb-3\">\n      <label\n        for=\"loan-period\"\n        class=\"block text-sm font-semibold leading-6 text-gray-900\"\n        >Period employees are allowed to request loan</label\n      >\n      {{ company.loan_period }}\n      <input\n        type=\"range\"\n        id=\"loan-period\"\n        min=\"1\"\n        max=\"28\"\n        class=\"text-slate-900 rounded-md block w-full px-3 h-10 sm:text-sm focus:outline-none placeholder:text-slate-400\"\n        aria-required\n        v-model=\"company.loan_period\"\n      />\n      <p class=\"text-red-500 mb-6 text-sm\">\n        {{ getErrorByField(fieldErrors, \"LoanPeriod\") }}\n      </p>\n    </div>\n    <div class=\"mb-3\">\n      <label\n        for=\"approves-loan\"\n        class=\"block text-sm font-semibold leading-6 mb-5 text-gray-900\"\n        >Should loans be approved?</label\n      >\n      <label class=\"inline-flex relative items-center mr-5 cursor-pointer\">\n        <input\n          type=\"checkbox\"\n          id=\"approves-loan\"\n          class=\"sr-only peer\"\n          v-model=\"company.approves_loan\"\n          required\n        />\n        <div\n          class=\"w-11 h-6 bg-gray-200 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-teal-600\"\n        ></div>\n        <div class=\"text-[#2C7075] ml-3\">{{ company.approves_loan }}</div>\n      </label>\n      <p class=\"text-red-500 mb-6 text-sm\">\n        {{ getErrorByField(fieldErrors, \"ApprovesLoan\") }}\n      </p>\n    </div>\n    <div class=\"flex justify-end\">\n      <button\n        type=\"submit\"\n        class=\"inline-flex rounded-lg text-sm font-semibold py-2.5 px-4 text-sky-50 bg-teal-700 hover:text-sky-50/80 hover:bg-teal-600\"\n      >\n        <spin v-if=\"pending\" />\n        <span v-else>Update Company</span>\n      </button>\n    </div>\n  </form>\n</template>\n","<script setup lang=\"ts\">\nimport { TransitionRoot } from \"@headlessui/vue\";\nimport { storeToRefs } from \"pinia\";\nimport { useDialogStore } from \"../stores/dialogs\";\n\nconst props = defineProps({\n  refreshCompanies: {\n    type: Function,\n    required: true,\n  },\n});\n\nconst { showUpdateCompanyDialog } = storeToRefs(useDialogStore());\nconst { closeUpdateCompanyDialog } = useDialogStore();\n</script>\n<template>\n  <TransitionRoot as=\"template\" :show=\"showUpdateCompanyDialog\">\n    <DialogComponent :closeFunc=\"closeUpdateCompanyDialog\">\n      <DialogHead>Update Company</DialogHead>\n      <DialogTitle> </DialogTitle>\n\n      <div class=\"w-full p-4 space-y-3\">\n        <UpdateCompany />\n      </div>\n      <DialogFooter>\n        <p class=\"text-sm text-gray-600\"></p>\n      </DialogFooter>\n    </DialogComponent>\n  </TransitionRoot>\n</template>\n","import { Company } from \"~/server/src/company\";\n\nexport interface DisableCompanyState {\n  pending: boolean;\n  responseOK: boolean;\n  nonFieldErrors: string;\n  fieldErrors: Array<{ field: string; description: string }> | null;\n}\n\nexport const useDisableCompanyStore = defineStore(\"disable-company-store\", {\n  state: (): DisableCompanyState => ({\n    pending: false,\n    responseOK: false,\n    nonFieldErrors: \"\",\n    fieldErrors: null,\n  }),\n\n  actions: {\n    async disableCompany(body: Company, accessToken: string) {\n      try {\n        this.pending = true;\n        let nonFieldErrors = \"\";\n        let fieldErrors = null;\n        let responseOK = false;\n        this.responseOK = responseOK;\n\n        const { data } = await useFetch(\"/api/company/disable\", {\n          method: \"put\",\n          body: { body, accessToken },\n\n          async onResponse({ request, response, options }) {\n            // Process the response data\n            if (response.ok) {\n              responseOK = true;\n            }\n          },\n\n          async onResponseError({ request, response, options }) {\n            if (response.status == 400) {\n              fieldErrors = response._data?.data.errors;\n            }\n            if (response.status == 401) {\n              nonFieldErrors = \"Unauthorised\";\n            }\n            if (response.status === 403) {\n              nonFieldErrors = response._data?.data.error;\n            }\n            if (response.status === 404) {\n              nonFieldErrors = response._data?.data.error;\n            }\n            if (response.status === 500) {\n              nonFieldErrors = \"Internal Error\";\n            }\n          },\n        });\n        this.pending = false;\n        this.fieldErrors = fieldErrors;\n        this.nonFieldErrors = nonFieldErrors;\n        this.responseOK = responseOK;\n      } catch (err) {\n        this.pending = false;\n      }\n    },\n  },\n});\n","<script setup lang=\"ts\">\nimport { Company } from \"~/server/src/company\";\nimport { useAuthStore } from \"../stores/login\";\nimport { getErrorByField, fieldHasError } from \"~/utils/errors\";\nimport { useCompanyStore } from \"../stores/company\";\nimport { useDisableCompanyStore } from \"../stores/disable-company\";\nimport { useDialogStore } from \"~/stores/dialogs\"\nconst { actionIsToDisable } = storeToRefs(useUpdateCompanyStore());\nconst { disableCompany } = useDisableCompanyStore();\nconst { closeDisableCompanyDialog } = useDialogStore();\n\nconst { pending, nonFieldErrors, fieldErrors, responseOK } = storeToRefs(\n    useDisableCompanyStore()\n);\nconst { user } = storeToRefs(useAuthStore());\nconst { selectedCompany } = storeToRefs(useCompanyStore());\n\nconst company: Company = ref(selectedCompany.value);\n\nconst companyDisable = async () => {\n    const accessToken = user.value.refresh_token;\n    console.log(company.value);\n    console.log(actionIsToDisable.value)\n    if (actionIsToDisable.value) {\n        company.value.status = 0\n    } else {\n        company.value.status = 1\n    }\n    await disableCompany(company.value, accessToken);\n    if (responseOK.value) {\n        closeDisableCompanyDialog();\n\n    }\n};\n\n</script>\n<template>\n    <div class=\" mx-auto\">\n        <p class=\" text-xl flex justify-center\">Are you sure!</p>\n        <div class=\"flex justify-end\">\n            <button @click=\"companyDisable\"\n                class=\"inline-flex rounded-lg text-sm font-semibold py-2.5 px-4 text-sky-50 bg-teal-700 hover:text-sky-50/80 hover:bg-teal-600\">\n                <spin v-if=\"pending\" />\n                <span v-else>Confirm</span>\n            </button>\n        </div>\n    </div>\n</template>","<script setup lang=\"ts\">\nimport { TransitionRoot } from \"@headlessui/vue\";\nimport { storeToRefs } from \"pinia\";\nimport { useDialogStore } from \"../stores/dialogs\";\n\nconst props = defineProps({\n    refreshCompanies: {\n        type: Function,\n        required: true,\n    },\n});\n\nconst { showDisableCompanyDialog } = storeToRefs(useDialogStore());\nconst { closeDisableCompanyDialog } = useDialogStore();\n</script>\n<template>\n    <TransitionRoot as=\"template\" :show=\"showDisableCompanyDialog\">\n        <DialogComponent :closeFunc=\"closeDisableCompanyDialog\">\n            <DialogHead>Update Status</DialogHead>\n            <DialogTitle> </DialogTitle>\n\n            <div class=\"w-full p-4 space-y-3\">\n                <DisableCompany />\n            </div>\n            <DialogFooter>\n                <p class=\"text-sm text-gray-600\"></p>\n            </DialogFooter>\n        </DialogComponent>\n    </TransitionRoot>\n</template>","<script setup lang=\"ts\">\nimport { useDateFormat } from \"@vueuse/core\";\nimport { useAuthStore } from \"../stores/login\";\nimport { useDialogStore } from \"../stores/dialogs\";\nimport { useCompanyStore } from \"../stores/company\";\nimport { Company } from \"~~/server/src/company\";\n\n\nconst formatter = ref(\"YYYY-MM-DD h:mm:ss\");\n\nconst { openUpdateCompanyDialog } = useDialogStore();\nconst { openDisableCompanyDialog } = useDialogStore();\nconst { setSelectedCompany } = useCompanyStore();\nconst { setDisableAction } = useUpdateCompanyStore();\nconst { user } = storeToRefs(useAuthStore());\n\n\nconst pageSize = ref(10);\nconst pageID = ref(1);\nconst searchValue = ref();\n\n\nconst test = ref();\nconst { data: companies, pending, error, refresh } = await useFetch(\"/api/company/list\", {\n  query: {\n    pageSize: pageSize.value,\n    pageID: pageID.value,\n    accessToken: user.value.refresh_token,\n  },\n});\nrefresh();\n\n// const formatDate = (date: Date) => useDateFormat(date, formatter);\n\nfunction formatDate(date: formatter) {\n  var d = new Date(date),\n    month = '' + (d.getMonth() + 1),\n    day = '' + d.getDate(),\n    year = d.getFullYear();\n  if (month.length < 2)\n    month = '0' + month;\n  if (day.length < 2)\n    day = '0' + day;\n\n  return [day, month, year].join('-');\n}\n\nconst updateCompany = (company: Company) => {\n  setSelectedCompany(company)\n  openUpdateCompanyDialog()\n}\n// lounch disable\nconst disableCompany = (company: Company) => {\n  setSelectedCompany(company)\n  console.log(\"here\")\n  if (company.status == 1) {\n    setDisableAction(true)\n  } else if (company.status == 0) {\n    setDisableAction(false)\n  }\n  openDisableCompanyDialog()\n}\nconst isChecked = (status) => {\n  if (status === 1) {\n    return true;\n  }\n  if (status === 0) {\n    return false;\n  }\n}\n\n// search Company by name\nconst filterCompanies = () => {\n  if (!companies) return;\n\n  if (companies.value) {\n    companies.value = companies.value.filter((companies) =>\n      companies.name\n        .toLowerCase()\n        .includes(searchValue.value.toLowerCase())\n    );\n    //   if (searchValue.value !== '' && filterCompanies.length === 0) {\n    //   window.location.reload();\n    // }\n\n  }\n  return companies;\n\n  console.log(test)\n  console.log(companies.value);\n\n}\n\n</script>\n\n<template>\n  <div class=\" flex justify-start text-xl\">\n    Companies\n  </div>\n  <br>\n  <div class=\"flex justify-end\">\n    <form class=\"mb-3 w-1/3\" @submit.prevent=\"filterCompanies\">\n      <label for=\"default-search\" class=\"mb-2 text-sm font-medium text-gray-900 sr-only\">Search</label>\n      <div class=\"relative\">\n        <div class=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\n          <svg aria-hidden=\"true\" class=\"w-5 h-5 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"\n            xmlns=\"http://www.w3.org/2000/svg\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n          </svg>\n        </div>\n        <input type=\"search\" id=\"default-search\"\n          class=\"block w-full p-3 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:outline-teal-700 focus:ring-teal-500 focus:border-0\"\n          placeholder=\"Search companies..\" required v-model=\"searchValue\" />\n        <button type=\"submit\"\n          class=\"text-white absolute right-2.5 bottom-2.5 bg-teal-700 hover:bg-teal-800 focus:ring-4 focus:outline-none focus:ring-teal-300 font-medium rounded-lg text-sm px-2 py-1\">\n          Search\n        </button>\n      </div>\n    </form>\n  </div>\n  <br>\n  <Spin v-if=\"pending\" class=\"h-20 w-20 text-teal-700\" />\n  <div v-else class=\"overflow-x-auto h-[35rem] relative shadow-md sm:rounded-lg\">\n    <table class=\"w-full text-sm text-left text-gray-500\">\n      <thead class=\"text-xs text-gray-700  bg-gray-200\">\n        <tr class=\"divide-x divide-gray-300\">\n          <th scope=\"col\" class=\"py-3 px-6\"></th>\n          <th scope=\"col\" class=\"py-3 px-6\">Company Name</th>\n          <th scope=\"col\" class=\"py-3 px-6\">Address</th>\n          <th scope=\"col\" class=\"py-3 px-6\">Employees</th>\n          <th scope=\"col\" class=\"py-3 px-6\">Profit Share</th>\n          <th scope=\"col\" class=\"py-3 px-6\">Max.Loan.Percent</th>\n          <th scope=\"col\" class=\"py-3 px-6\">Loan.Period</th>\n          <th scope=\"col\" class=\"py-3 px-6\">Approve.Loans</th>\n          <th scope=\"col\" class=\"py-3 px-6\">Status</th>\n          <th scope=\"col\" class=\"py-3 px-6\">Created.At</th>\n          <th scope=\"col\" class=\"py-3 px-6\">Edit</th>\n          <th scope=\"col\" class=\"py-3 px-6\">Enable/Disable</th>\n        </tr>\n      </thead>\n      <tbody class=\"divide-y\">\n        <tr v-for=\"(company, index) in companies\" :key=\"index\" :class=\"{ 'bg-gray-50': index % 2 === 1 }\"\n          class=\"bg-white border-b divide-x hover:bg-teal-100 cursor-pointer\">\n          <td class=\"py-4 px-6\">{{ company.id }}</td>\n          <td class=\"py-4 px-6\">{{ company.name }}</td>\n          <td class=\"py-4 px-6\">{{ company.physical_address }}</td>\n          <td class=\"py-4 px-6\">{{ company.number_of_employees }}</td>\n          <td class=\"py-4 px-6\">{{ company.profit_share_percent }}</td>\n          <td class=\"py-4 px-6\">{{ company.max_loan_percent }}</td>\n          <td class=\"py-4 px-6\">{{ company.loan_period }}</td>\n          <td class=\"py-4 px-6\">{{ company.approves_loan }}</td>\n          <td class=\"py-4 px-6\">\n            <label v-if=\"company.status === 0\">\n              Not Active\n            </label>\n            <label v-if=\"company.status === 1\">\n              Active\n            </label>\n          </td>\n          <td class=\"py-4 px-6\">{{ formatDate(company.created_at) }}</td>\n          <td @click=\"updateCompany(company)\" class=\"py-4 px-6\">\n            <span class=\"cursor-pointer font-medium text-teal-700 hover:underline\">Edit</span>\n          </td>\n          <td class=\"py-4 px-6\" @click=\"disableCompany(company)\">\n            <label class=\"inline-flex relative items-center mr-5 cursor-pointer\">\n              <input type=\"checkbox\" value=\"\" class=\"sr-only peer\" :checked=\"isChecked(company.status)\" />\n              <div\n                class=\"w-11 h-6 bg-gray-400 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-teal-600\">\n              </div>\n              <!-- {{ company.status }} -->\n            </label>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  <UpdateCompanyDialog :refresh-companies=\"refresh\" />\n  <div class=\"w-1/2\">\n    <DisableCompanyDialog :refresh-companies=\"refresh\" />\n  </div>\n</template>\n","<template>\n  <TheCompanies />\n  <NuxtLink to=\"/companies/add\">\n    <PlusButton />\n  </NuxtLink>\n</template>\n"],"names":["_withAsyncContext","_ssrRenderComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAMO,MAAA,kBAAA,YAAA,mBAAA;AAAA,EAAuD,OAAA,OAAA;AAAA,IAChC,iBAAA;AAAA,EACT;AAAA,EACnB,SAAA;AAAA,IAES,mBAAA,SAAA;AAEL,cAAA,IAAA,OAAA;AACA,WAAA,kBAAA;AAAA,IAAuB;AAAA,EACzB;AAEJ,CAAA;ACRO,MAAA,wBAAA,YAAA,wBAAA;AAAA,EAAkE,OAAA,OAAA;AAAA,IACrC,SAAA;AAAA,IACvB,YAAA;AAAA,IACG,gBAAA;AAAA,IACI,aAAA;AAAA,IACH,mBAAA;AAAA,EACM;AAAA,EACrB,SAAA;AAAA,IAES,MAAA,cAAA,MAAA,aAAA,WAAA;AAEJ,cAAA,IAAA,SAAA;AACD,UAAA;AACE,aAAA,UAAA;AACA,YAAA,iBAAA;AACA,YAAA,cAAA;AACA,YAAA,aAAA;AACA,aAAA,aAAA;AAEA,cAAA,EAAA,KAAA,IAAA,MAAA,SAAA,uBAAA;AAAA,UAAuD,QAAA;AAAA,UAC7C,MAAA,EAAA,MAAA,YAAA;AAAA,UACkB,MAAA,WAAA,EAAA,SAAA,UAAA,QAAA,GAAA;AAIxB,gBAAA,SAAA,IAAA;AACE,2BAAA;AAAA,YAAa;AAAA,UACf;AAAA,UACF,MAAA,gBAAA,EAAA,SAAA,UAAA,QAAA,GAAA;;AAGE,gBAAA,SAAA,UAAA,KAAA;AACE,6BAAA,cAAA,UAAA,mBAAA,KAAA;AAAA,YAAmC;AAErC,gBAAA,SAAA,UAAA,KAAA;AACE,+BAAA;AAAA,YAAiB;AAEnB,gBAAA,SAAA,WAAA,KAAA;AACE,gCAAA,cAAA,UAAA,mBAAA,KAAA;AAAA,YAAsC;AAExC,gBAAA,SAAA,WAAA,KAAA;AACE,gCAAA,cAAA,UAAA,mBAAA,KAAA;AAAA,YAAsC;AAExC,gBAAA,SAAA,WAAA,KAAA;AACE,+BAAA;AAAA,YAAiB;AAAA,UACnB;AAAA,QACF,GAAA,aAAA;AAEF,aAAA,UAAA;AACA,aAAA,cAAA;AACA,aAAA,iBAAA;AACA,aAAA,aAAA;AAAA,MAAkB,SAAA,KAAA;AAElB,aAAA,UAAA;AAAA,MAAe;AAAA,IACjB;AAAA,IACF,iBAAA,SAAA;AAEE,WAAA,oBAAA;AAAA,IAAyB;AAAA,EAC3B;AAEJ,CAAA;;;;;AC7DA,0BAAA;AACA,mBAAA;AAEA,UAAA,EAAA,SAAA,gBAAA,aAAA,WAAA,IAAA;AAAA,MAA6D,sBAAA;AAAA,IACrC;AAExB,gBAAA,aAAA,CAAA;AACA,UAAA,EAAA,gBAAA,IAAA,YAAA,gBAAA,CAAA;AAEA,UAAA,UAAA,IAAA,gBAAA,KAAA;AAqBA,QAAA,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA,UAAA,EAAA,wBAAA,IAAA,YAAA,eAAA,CAAA;AACA,UAAA,EAAA,6BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJO,MAAA,yBAAA,YAAA,yBAAA;AAAA,EAAoE,OAAA,OAAA;AAAA,IACtC,SAAA;AAAA,IACxB,YAAA;AAAA,IACG,gBAAA;AAAA,IACI,aAAA;AAAA,EACH;AAAA,EACf,SAAA;AAAA,IAES,MAAA,eAAA,MAAA,aAAA;AAEL,UAAA;AACE,aAAA,UAAA;AACA,YAAA,iBAAA;AACA,YAAA,cAAA;AACA,YAAA,aAAA;AACA,aAAA,aAAA;AAEA,cAAA,EAAA,KAAA,IAAA,MAAA,SAAA,wBAAA;AAAA,UAAwD,QAAA;AAAA,UAC9C,MAAA,EAAA,MAAA,YAAA;AAAA,UACkB,MAAA,WAAA,EAAA,SAAA,UAAA,QAAA,GAAA;AAIxB,gBAAA,SAAA,IAAA;AACE,2BAAA;AAAA,YAAa;AAAA,UACf;AAAA,UACF,MAAA,gBAAA,EAAA,SAAA,UAAA,QAAA,GAAA;;AAGE,gBAAA,SAAA,UAAA,KAAA;AACE,6BAAA,cAAA,UAAA,mBAAA,KAAA;AAAA,YAAmC;AAErC,gBAAA,SAAA,UAAA,KAAA;AACE,+BAAA;AAAA,YAAiB;AAEnB,gBAAA,SAAA,WAAA,KAAA;AACE,gCAAA,cAAA,UAAA,mBAAA,KAAA;AAAA,YAAsC;AAExC,gBAAA,SAAA,WAAA,KAAA;AACE,gCAAA,cAAA,UAAA,mBAAA,KAAA;AAAA,YAAsC;AAExC,gBAAA,SAAA,WAAA,KAAA;AACE,+BAAA;AAAA,YAAiB;AAAA,UACnB;AAAA,QACF,GAAA,aAAA;AAEF,aAAA,UAAA;AACA,aAAA,cAAA;AACA,aAAA,iBAAA;AACA,aAAA,aAAA;AAAA,MAAkB,SAAA,KAAA;AAElB,aAAA,UAAA;AAAA,MAAe;AAAA,IACjB;AAAA,EACF;AAEJ,CAAA;;;;;ACzDA,gBAAA,sBAAA,CAAA;AACA,2BAAA;AACA,mBAAA;AAEA,UAAA,EAAA,SAAA,gBAAA,aAAA,WAAA,IAAA;AAAA,MAA6D,uBAAA;AAAA,IAClC;AAE3B,gBAAA,aAAA,CAAA;AACA,UAAA,EAAA,gBAAA,IAAA,YAAA,gBAAA,CAAA;AAEA,QAAA,gBAAA,KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA,UAAA,EAAA,yBAAA,IAAA,YAAA,eAAA,CAAA;AACA,UAAA,EAAA,8BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA,QAAA,oBAAA;AAEA,mBAAA;AACA,mBAAA;AACA,oBAAA;AACA,0BAAA;AACA,UAAA,EAAA,KAAA,IAAA,YAAA,aAAA,CAAA;AAGA,UAAA,WAAA,IAAA,EAAA;AACA,UAAA,SAAA,IAAA,CAAA;AACA,UAAA,cAAA;AAGA,QAAA;AACA,UAAA,EAAA,MAAA,WAAA,SAAA,OAAA,QAAA,KAAA,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,SAAA,qBAAA;AAAA,MAAyF,OAAA;AAAA,QAChF,UAAA,SAAA;AAAA,QACc,QAAA,OAAA;AAAA,QACJ,aAAA,KAAA,MAAA;AAAA,MACS;AAAA,IAC1B,GAAA,aAAA,CAAA,GAAA,SAAA,MAAA,QAAA,UAAA,GAAA;AAEF;AAIA,aAAA,WAAA,MAAA;AACE,UAAA,IAAA,IAAA,KAAA,IAAA,GAAA,QAAA,MAAA,EAAA,SAAA,IAAA,IAAA,MAAA,KAAA,EAAA,QAAA,GAAA,OAAA,EAAA;AAIA,UAAA,MAAA,SAAA;AACE,gBAAA,MAAA;AACF,UAAA,IAAA,SAAA;AACE,cAAA,MAAA;AAEF,aAAA,CAAA,KAAA,OAAA,IAAA,EAAA,KAAA,GAAA;AAAA,IAAkC;AAkBpC,UAAA,YAAA,CAAA,WAAA;AACE,UAAA,WAAA,GAAA;AACE,eAAA;AAAA,MAAO;AAET,UAAA,WAAA,GAAA;AACE,eAAA;AAAA,MAAO;AAAA,IACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEU,QAAAC,mBAAA,yBAAA,MAAA,MAAA,OAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;"}