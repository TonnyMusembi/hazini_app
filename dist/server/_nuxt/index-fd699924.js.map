{"version":3,"file":"index-fd699924.js","sources":["../../../../components/TheLogin.vue","../../../../stores/register.ts","../../../../components/TheRegister.vue","../../../../pages/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { LoginCredentials } from \"~/server/src/user\";\nimport { removeLeadingZero, addCountryCode } from \"~/utils/format-stuff\";\nimport { useAuthStore } from \"../stores/login\";\n\nconst { login: loginUser } = useAuthStore();\nconst { pending, error, responseOK } = storeToRefs(useAuthStore());\nconst countryCode = \"+254\";\nconst username = ref(\"\");\nconst password = ref(\"\");\n\nconst login = async () => {\n  //   const phone = addCountryCode(phoneNumber.value, countryCode);\n  const body: LoginCredentials = {\n    username: username.value,\n    password: password.value,\n  };\n  await loginUser(body);\n  if (responseOK.value) {\n    navigateTo(\"/dashboard\");\n  }\n};\n</script>\n<template>\n  <form @submit.prevent=\"login\" class=\"w-full max-w-sm\">\n    <div class=\"mb-6\">\n      <label for=\"username\" class=\"block text-sm font-semibold leading-6 text-gray-900\">Username</label>\n      <input type=\"text\" placeholder=\"user@xyz.com\" name=\"username\" id=\"username\"\n        class=\"mt-2 appearance-none text-slate-900 bg-white rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-[#37899A] ring-1 ring-slate-200\"\n        required v-model=\"username\" />\n    </div>\n    <div class=\"mb-6\">\n      <label for=\"password\" class=\"block text-sm font-semibold leading-6 text-gray-900\">Password</label><input\n        type=\"password\" name=\"password\" placeholder=\"XXXXXXX\" id=\"password\"\n        class=\"mt-2 appearance-none text-slate-900 bg-white rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-[#37899A] ring-1 ring-slate-200\"\n        aria-required required v-model=\"password\" minlength=\"6\" />\n    </div>\n    <p class=\"text-red-500 mb-6 text-sm\">{{ error }}</p>\n    <button type=\"submit\"\n      class=\"inline-flex justify-center rounded-lg text-sm font-semibold py-2.5 px-4 text-sky-50 bg-[#37899A] hover:text-sky-50/80 hover:bg-teal-500 w-full\">\n      <Spin v-if=\"pending\" />\n      <span v-else>Sign in to account</span>\n    </button>\n    <p class=\"mt-6 text-center\">\n      <a href=\"/resetpassword\" class=\"text-sm hover:underline\">Forgot password?</a>\n    </p>\n  </form>\n</template>\n","import { CreateUserParams } from \"~/server/src/user\";\n\nexport interface CreateUserState {\n  pending: boolean;\n  responseOK: boolean;\n  nonFieldErrors: string;\n  fieldErrors: Array<{ field: string; description: string }> | null;\n}\nexport const useCreateUserStore = defineStore(\"create-user-store\", {\n  state: (): CreateUserState => ({\n    pending: false,\n    responseOK: false,\n    nonFieldErrors: \"\",\n    fieldErrors: null,\n  }),\n\n  actions: {\n    async createUser(body: CreateUserParams) {\n      try {\n        this.pending = true;\n        let fieldErrors = null;\n        let nonFieldErrors = \"\";\n        this.fieldErrors = fieldErrors;\n        let responseOK = false;\n        this.responseOK = responseOK;\n        const { data } = await useFetch(\"/api/users/create\", {\n          method: \"post\",\n          body: body,\n\n          async onResponse({ request, response, options }) {\n            // Process the response data\n            if (response.ok) {\n              responseOK = true;\n            }\n          },\n\n          async onResponseError({ request, response, options }) {\n            if (response.status == 400) {\n              fieldErrors = response._data?.data.errors;\n            }\n            if (response.status == 401) {\n              nonFieldErrors = \"Unauthorised\";\n            }\n            if (response.status === 403) {\n              nonFieldErrors = \"Forbidden\";\n            }\n            if (response.status === 500) {\n              nonFieldErrors = \"Internal Error\";\n            }\n          },\n        });\n        this.pending = false;\n        this.fieldErrors = fieldErrors;\n        this.nonFieldErrors = nonFieldErrors;\n        this.responseOK = responseOK;\n      } catch (err) {\n        this.pending = false;\n      }\n    },\n  },\n});\n","<script setup lang=\"ts\">\nimport { CreateUserParams } from \"~/server/src/user\";\nimport { removeLeadingZero, addCountryCode } from \"~/utils/format-stuff\";\nimport { useCreateUserStore } from \"../stores/register\";\nimport { getErrorByField, fieldHasError } from \"~/utils/errors\";\n\nimport { useAuthStore } from \"../stores/login\";\nconst { setViewToDisplay } = useAuthStore();\n\nconst { createUser } = useCreateUserStore();\nconst errors = ref();\nconst loading = ref(false);\nconst { pending, nonFieldErrors, fieldErrors, responseOK } = storeToRefs(\n  useCreateUserStore()\n);\n\nconst countryCode = \"+254\";\nconst fullNames = ref(\"\");\nconst phoneNumber = ref(\"\");\nconst password = ref(\"\");\nconst username = ref(\"\");\nconst kraPin = ref(\"\");\nconst iDNumber = ref(\"\");\n\nconst register = async () => {\n  const phone = addCountryCode(phoneNumber.value, countryCode);\n  const body: CreateUserParams = {\n    username: username.value,\n    full_names: fullNames.value,\n    phone_number: phone,\n    password: password.value,\n    email: username.value,\n    kra_pin: kraPin.value,\n    national_id: iDNumber.value,\n  };\n\n  await createUser(body);\n  if (responseOK.value) {\n    setViewToDisplay(\"LOGIN\");\n    if (errors.value) {\n      alert('error');\n    }\n\n  }\n};\n\n</script>\n<template>\n  <form @submit.prevent=\"register\" class=\"w-full max-w-sm\">\n    <div class=\"mb-6\">\n      <input type=\"text\" name=\"full_names\" id=\"full_names\" placeholder=\"Full Names\" :class=\"{\n        'ring-1 ring-red-500 bg-red-50': fieldHasError(fieldErrors, 'FullNames'),\n      }\"\n        class=\"mt-2 appearance-none text-slate-900 bg-white rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-[#37899A] ring-1 ring-slate-200\"\n        required v-model=\"fullNames\" />\n      <p class=\"text-red-500 mb-6 text-sm\">\n        {{ getErrorByField(fieldErrors, \"FullNames\") }}\n      </p>\n    </div>\n    <div class=\"mb-6\">\n      <input type=\"text\" name=\"username\" id=\"username\" placeholder=\"Email\" :class=\"{\n        'ring-1 ring-red-500 bg-red-50': fieldHasError(fieldErrors, 'Username'),\n      }\"\n        class=\"mt-2 appearance-none text-slate-900 bg-white rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-[#37899A] ring-1 ring-slate-200\"\n        required v-model=\"username\" />\n      <p class=\"text-red-500 mb-6 text-sm\">\n        {{ getErrorByField(fieldErrors, \"Username\") }}\n      </p>\n    </div>\n    <div class=\"mb-6\">\n      <div class=\"rounded-md w-full h-10 bg-gray-200 sm:text-sm flex border\">\n        <div class=\"flex text-center h-full items-center justify-center pl-2 pr-1\">\n          +254\n        </div>\n        <input type=\"tel\" placeholder=\"Mobile Number\" name=\"phone\" pattern=\"[1-9]{1}[0-9]{1}[0-9]{3}[0-9]{4}\" id=\"phone\"\n          :class=\"{\n            'ring-1 ring-red-500 bg-red-50': fieldHasError(fieldErrors, 'PhoneNumber'),\n          }\"\n          class=\"appearance-none px-1 text-slate-900 w-full h-full rounded-r-md bg-white block focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-[#37899A]\"\n          required v-model=\"phoneNumber\" />\n      </div>\n      <p class=\"text-red-500 mb-6 text-sm\">\n        {{ getErrorByField(fieldErrors, \"PhoneNumber\") }}\n      </p>\n    </div>\n\n    <div class=\"mb-6\">\n      <div class=\"flex space-x-3\">\n        <input type=\"text\" name=\"national_id\" id=\"national_id\" placeholder=\"National ID Number\" :class=\"{\n          'ring-1 ring-red-500 bg-red-50': fieldHasError(fieldErrors, 'NationalID'),\n        }\"\n          class=\"mt-2 appearance-none text-slate-900 bg-white rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-[#37899A] ring-1 ring-slate-200\"\n          v-model=\"iDNumber\" required />\n        <input type=\"text\" name=\"kra_pin\" id=\"kra_pin\" placeholder=\"KRA Pin\" :class=\"{\n          'ring-1 ring-red-500 bg-red-50': fieldHasError(fieldErrors, 'KraPin'),\n        }\"\n          class=\"mt-2 appearance-none text-slate-900 bg-white rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-[#37899A] ring-1 ring-slate-200\"\n          v-model=\"kraPin\" required />\n      </div>\n      <p class=\"text-red-500 text-sm mt-2\">\n        {{ getErrorByField(fieldErrors, \"KraPin\") }}\n      </p>\n      <p class=\"text-red-500 mb-6 text-sm\">\n        {{ getErrorByField(fieldErrors, \"NationalID\") }}\n      </p>\n    </div>\n    <div class=\"mb-6\">\n      <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" :class=\"{\n        'ring-1 ring-red-500 bg-red-50': fieldHasError(fieldErrors, 'Password'),\n      }\"\n        class=\"mt-2 appearance-none text-slate-900 bg-white rounded-md block w-full px-3 h-10 shadow-sm sm:text-sm focus:outline-none placeholder:text-slate-400 focus:ring-2 focus:ring-[#37899A] ring-1 ring-slate-200\"\n        aria-required required v-model=\"password\" minlength=\"6\" />\n      <p class=\"text-red-500 mb-6 text-sm\">\n        {{ getErrorByField(fieldErrors, \"Password\") }}\n      </p>\n    </div>\n    <p v-if=\"nonFieldErrors\" class=\"text-red-500 mb-6\">\n      {{ nonFieldErrors }}\n    </p>\n    <p>{{ errors }}</p>\n    <button type=\"submit\"\n      class=\"inline-flex justify-center rounded-lg text-sm font-semibold py-2.5 px-4 text-sky-50 bg-[#37899A] hover:text-sky-50/80 hover:bg-teal-700 w-full\">\n      <Spin v-if=\"pending\" />\n      <span v-else>Sign in to account</span>\n    </button>\n  </form>\n</template>\n","<script setup lang=\"ts\">\nimport { useAuthStore } from \"../stores/login\";\nconst { viewToDisplay } = storeToRefs(useAuthStore());\ndefinePageMeta({\n  layout: \"auth\",\n});\n</script>\n<template>\n  <TheLogin v-if=\"viewToDisplay === 'LOGIN'\" />\n  <TheRegister v-if=\"viewToDisplay === 'REGISTER'\" />\n</template>\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,iBAAA;AACA,UAAA,EAAA,SAAA,OAAA,WAAA,IAAA,YAAA,aAAA,CAAA;AAEA,UAAA,WAAA,IAAA,EAAA;AACA,UAAA,WAAA,IAAA,EAAA;;;;;;;;;;;;;;;;;;;ACDO,MAAA,qBAAA,YAAA,qBAAA;AAAA,EAA4D,OAAA,OAAA;AAAA,IAClC,SAAA;AAAA,IACpB,YAAA;AAAA,IACG,gBAAA;AAAA,IACI,aAAA;AAAA,EACH;AAAA,EACf,SAAA;AAAA,IAES,MAAA,WAAA,MAAA;AAEL,UAAA;AACE,aAAA,UAAA;AACA,YAAA,cAAA;AACA,YAAA,iBAAA;AACA,aAAA,cAAA;AACA,YAAA,aAAA;AACA,aAAA,aAAA;AACA,cAAA,EAAA,KAAA,IAAA,MAAA,SAAA,qBAAA;AAAA,UAAqD,QAAA;AAAA,UAC3C;AAAA,UACR,MAAA,WAAA,EAAA,SAAA,UAAA,QAAA,GAAA;AAIE,gBAAA,SAAA,IAAA;AACE,2BAAA;AAAA,YAAa;AAAA,UACf;AAAA,UACF,MAAA,gBAAA,EAAA,SAAA,UAAA,QAAA,GAAA;;AAGE,gBAAA,SAAA,UAAA,KAAA;AACE,6BAAA,cAAA,UAAA,mBAAA,KAAA;AAAA,YAAmC;AAErC,gBAAA,SAAA,UAAA,KAAA;AACE,+BAAA;AAAA,YAAiB;AAEnB,gBAAA,SAAA,WAAA,KAAA;AACE,+BAAA;AAAA,YAAiB;AAEnB,gBAAA,SAAA,WAAA,KAAA;AACE,+BAAA;AAAA,YAAiB;AAAA,UACnB;AAAA,QACF,GAAA,aAAA;AAEF,aAAA,UAAA;AACA,aAAA,cAAA;AACA,aAAA,iBAAA;AACA,aAAA,aAAA;AAAA,MAAkB,SAAA,KAAA;AAElB,aAAA,UAAA;AAAA,MAAe;AAAA,IACjB;AAAA,EACF;AAEJ,CAAA;;;;;ACrDA,iBAAA;AAEA,uBAAA;AACA,UAAA,SAAA;AACA,QAAA,KAAA;AACA,UAAA,EAAA,SAAA,gBAAA,aAAA,WAAA,IAAA;AAAA,MAA6D,mBAAA;AAAA,IACxC;AAIrB,UAAA,YAAA,IAAA,EAAA;AACA,UAAA,cAAA,IAAA,EAAA;AACA,UAAA,WAAA,IAAA,EAAA;AACA,UAAA,WAAA,IAAA,EAAA;AACA,UAAA,SAAA,IAAA,EAAA;AACA,UAAA,WAAA,IAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA,UAAA,EAAA,cAAA,IAAA,YAAA,aAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;"}